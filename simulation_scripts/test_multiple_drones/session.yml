name: simulation
root: ./
on_project_start: nums=$(shuf -i 1-30 -n 30 | tr '\n' " "); echo "UAV_NUMBERS=($nums)" > /tmp/random_uav_numbers
pre_window: source /tmp/random_uav_numbers; export UAV_NAME="uav${UAV_NUMBERS[1]}"; export RUN_TYPE=simulation; export UAV_TYPE=t650; export WORLD_NAME=simulation; export SENSORS="garmin_down"
startup_window: status
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_file:='$(find thesis_trajectory_generator)/custom_worlds/camp_field/grass_plane.world' gui:=true
  - status:
      layout: tiled
      panes:
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; waitForSimulation; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "${UAV_NUMBERS[1]} ${UAV_NUMBERS[2]} $UAV_TYPE --enable-rangefinder"
  - control:
      layout: tiled
      panes:
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; waitForOdometry; roslaunch mrs_uav_general core.launch WORLD_FILE:='$(find thesis_trajectory_generator)/custom_worlds/camp_field/world_simulation.yaml' config_trajectory_generation:=$(echo `pwd`/../../custom_configs/trajectory_generation_config.yaml)
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; waitForOdometry; roslaunch mrs_uav_general core.launch WORLD_FILE:='$(find thesis_trajectory_generator)/custom_worlds/camp_field/world_simulation.yaml' config_trajectory_generation:=$(echo `pwd`/../../custom_configs/trajectory_generation_config.yaml)
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME="uav${UAV_NUMBERS[1]}"; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME="uav${UAV_NUMBERS[2]}"; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        # #{ "uav${UAV_NUMBERS[1]}"
        - 'export UAV_NAME="uav${UAV_NUMBERS[1]}";
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ "uav${UAV_NUMBERS[2]}"
        - 'export UAV_NAME="uav${UAV_NUMBERS[2]}";
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
  - rviz:
      layout: tiled
      panes:
        - waitForControl; roslaunch mrs_uav_testing rviz_random_simulation.launch
        - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch

  - path_generation:
      layout: tiled
      panes:
        - 'waitForControl; sleep 20; roslaunch thesis_trajectory_generator thesis_trajectory_generator.launch'

  - path_following:
      layout: tiled
      panes:
        - 'export UAV_NAME="uav${UAV_NUMBERS[1]}"; waitForControl; rosservice call /$UAV_NAME/control_manager/use_safety_area "{data: false}"; sleep 5; roslaunch path_follower path_follower.launch'
        - 'export UAV_NAME="uav${UAV_NUMBERS[2]}"; waitForControl; rosservice call /$UAV_NAME/control_manager/use_safety_area "{data: false}";  sleep 5; roslaunch path_follower path_follower.launch'
  - gazebo_camera_follow:
      layout: tiled
      panes:
        - waitForOdometry; gz camera -c gzclient_camera -f "uav${UAV_NUMBERS[1]}"; history -s gz camera -c gzclient_camera -f "uav${UAV_NUMBERS[1]}"
